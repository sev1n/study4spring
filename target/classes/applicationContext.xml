<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<context:annotation-config />
	<context:component-scan base-package="com.xsq.spring">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 自动代理 -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
		<property name="usePrefix" value="true"></property>
		<property name="advisorBeanNamePrefix" value="advisor2" />
	</bean>

	<bean id="helloService" class="com.xsq.spring.service.impl.HelloServiceImpl"></bean>
	<bean id="userService" class="com.xsq.spring.service.impl.UserServiceImpl"></bean>
	<bean id="baseService" class="com.xsq.spring.service.impl.BaseService"></bean>

	<!-- 正则切点,支持路径方法名匹配 <bean id="advisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor"> 
		<property name="patterns"> <list> <value>com.xsq.spring.service.impl.*.say()</value> 
		</list> </property> <property name="advice"> <bean id="advice" class="com.xsq.spring.proxy.ProxyObject3"> 
		</bean> </property> </bean> -->

	<!-- AspectJ切点，支持入参和返回类型匹配 -->
	<bean id="advisor1"
		class="org.springframework.aop.aspectj.AspectJExpressionPointcutAdvisor">
		<property name="expression"
			value="execution(* com.xsq.spring.service.impl.*.*(..))">
		</property>
		<property name="advice">
			<bean id="proxy1" class="com.xsq.spring.proxy.ProxyObject4"></bean>
		</property>
	</bean>

	<bean id="advisor"
		class="org.springframework.aop.aspectj.AspectJExpressionPointcutAdvisor">
		<!-- 任意返回类型 方法名 入参至少有一个String类型，其余不限 -->
		<property name="expression"
			value="execution(* com.xsq.spring.service.impl.*.*(String,..))">
		</property>
		<property name="advice">
			<bean id="proxy" class="com.xsq.spring.proxy.ProxyObject3"></bean>
		</property>
	</bean>
	<bean id="advisor2"
		class="org.springframework.aop.aspectj.AspectJExpressionPointcutAdvisor">
		<property name="expression"
			value="execution(String com.xsq.spring.service.impl.*.*())" />
		<property name="advice">
			<bean id="proxy2" class="com.xsq.spring.proxy.AfterProxyObject"></bean>
		</property>
	</bean>

		<!-- 此部分代码由自动代理完成  -->
<!-- 	<bean id="helloProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target" ref="helloService"></property>
		<property name="interceptorNames">
			<list>
				<value>advisor</value>
			</list>
		</property>
	</bean> -->

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 数据库连接基础信息 -->
		<property name="url"
			value="jdbc:mysql://172.23.0.174:3306/search?useUnicode=true&amp;characterEncoding=utf-8" />
		<property name="username" value="search_dev" />
		<property name="password" value="dkkqthmjal" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="1" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="10" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000" />
	</bean>	
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg ref="dataSource"></constructor-arg>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<constructor-arg ref="dataSource"></constructor-arg>
	</bean>
	
	<tx:annotation-driven/>
</beans>